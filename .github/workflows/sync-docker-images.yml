name: Sync Docker Images to Baidu Cloud

on:
  schedule:
    - cron: "0 0 * * *"  # 每天 00:00 运行
  push:
    branches:
      - main  
  workflow_dispatch:  # Allow manual triggering

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Baidu Cloud
        run: echo "${{ secrets.BAIDU_CLOUD_PASSWORD }}" | docker login -u "a2825862df6e444aa9317bb1a66d42e1" --password-stdin registry.baidubce.com

      - name: Inspect Docker Manifests
        run: |
          echo "=== 检查源镜像架构 ==="
          # 启用实验性功能以支持manifest命令
          echo '{ "experimental": true }' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker || true
          
          # 安装manifest工具
          docker pull mplatform/mquery
          
          # 查询每个镜像的支持架构
          for img in \
            svftools/teaching-software-verification:latest \
            svftools/teaching-software-verification:latest-arm64 \
            svftools/teaching-software-analysis:latest \
            svftools/teaching-software-analysis:latest-arm64; do
            echo "== $img 支持的架构 =="
            docker run --rm mplatform/mquery $img
            echo ""
          done
      
      - name: Pull Platform-Specific Images
        run: |
          # 拉取特定架构的镜像版本
          echo "=== 拉取amd64架构镜像 ==="
          docker pull --platform=linux/amd64 svftools/teaching-software-verification:latest
          docker pull --platform=linux/amd64 svftools/teaching-software-analysis:latest
          
          echo "=== 拉取arm64架构镜像 ==="
          docker pull --platform=linux/arm64 svftools/teaching-software-verification:latest-arm64
          docker pull --platform=linux/arm64 svftools/teaching-software-analysis:latest-arm64 || echo "arm64镜像拉取失败"

      - name: Retag Images for Baidu Cloud
        run: |
          # 重新标记为百度云镜像
          docker tag svftools/teaching-software-verification:latest registry.baidubce.com/svftools/teaching-software-verification:latest
          docker tag svftools/teaching-software-verification:latest-arm64 registry.baidubce.com/svftools/teaching-software-verification:latest-arm64
          docker tag svftools/teaching-software-analysis:latest registry.baidubce.com/svftools/teaching-software-analysis:latest
          docker tag svftools/teaching-software-analysis:latest-arm64 registry.baidubce.com/svftools/teaching-software-analysis:latest-arm64

      - name: Inspect Images Before Push
        run: |
          echo "=== 推送前检查镜像 ==="
          for img in \
            registry.baidubce.com/svftools/teaching-software-verification:latest \
            registry.baidubce.com/svftools/teaching-software-verification:latest-arm64 \
            registry.baidubce.com/svftools/teaching-software-analysis:latest \
            registry.baidubce.com/svftools/teaching-software-analysis:latest-arm64; do
            echo "== $img =="
            echo "镜像ID: $(docker inspect --format='{{.Id}}' $img)"
            echo "架构: $(docker inspect --format='{{.Architecture}}' $img)"
            echo "系统: $(docker inspect --format='{{.Os}}' $img)"
            echo ""
          done

      # - name: Push Images to Baidu Cloud
      #   run: |
      #     docker push registry.baidubce.com/svftools/teaching-software-verification:latest
      #     docker push registry.baidubce.com/svftools/teaching-software-verification:latest-arm64
      #     docker push registry.baidubce.com/svftools/teaching-software-analysis:latest
      #     docker push registry.baidubce.com/svftools/teaching-software-analysis:latest-arm64